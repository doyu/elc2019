@startuml
newpage
'title __Edge based IoT__
actor maintainer
cloud "Edge\n" #gray {
        (\n**Big ML**\n\n**algorithm**\n) #yellow
}
rectangle "machine\n" #cyan {
        collections gateway
        (sensor\n1) #lightgreen
        (sensor\n2) #lightgreen
        (failing\ncomponent)
}
(sensor\n1) -[dotted]up-> gateway : raw\ndata\n1
(sensor\n2) -[dotted]up-> gateway : raw\ndata\n2
gateway --[#blue,bold]up-> (\n**Big ML**\n\n**algorithm**\n) : raw\ndata\n1
gateway --[#blue,bold]up-> (\n**Big ML**\n\n**algorithm**\n) : raw\ndata\n2
(\n**Big ML**\n\n**algorithm**\n) -[bold]down-> (failing\ncomponent) : stop\nbefore\nfailure
(\n**Big ML**\n\n**algorithm**\n) .[dotted]right.> maintainer : notify to replace\nbefore failure
newpage
'title __TinyML as-a-Service__
actor maintainer
cloud Edge #gray {
        (ping)
}
rectangle "machine\n" #cyan {
        (Tiny\nML) #yellow
        (sensor\n1) #lightgreen
        (sensor\n2) #lightgreen
        (failing\ncomponent)
}
(sensor\n1) -[dotted]up-> (Tiny\nML) : raw\ndata\n1
(sensor\n2) -[dotted]up-> (Tiny\nML) : raw\ndata\n2
(Tiny\nML) ..[dotted]up.. (ping) : **optional**\nconnectivity
(Tiny\nML) -[dotted]right-> (failing\ncomponent) : stop\nbefore\nfailure
(ping).[dotted]right.> maintainer : notify to replace\nbefore failure
@enduml

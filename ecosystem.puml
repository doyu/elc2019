@startuml

title Traditionally

cloud cloud {
        cloud AWS
        cloud Azure
        cloud GCP
}

node device

AWS <-down- device : request
AWS -> device : return

'======================================================
newpage
title Scalability

cloud cloud {
        cloud AWS
        cloud Azure
        cloud GCP
}

node device1
node device2

AWS <---- device1 : request
AWS ----> device1 : return
AWS <---- device2 : request
AWS ----> device2 : return

'======================================================
newpage
title Currently

cloud cloud {
        cloud AWS
        cloud Azure
        cloud GCP
}
cloud edge
node device1
node device2

AWS <-down- edge : request
AWS -down-> edge : return

edge <- device1 : request
edge -down-> device1 : return
edge <- device2 : request
edge -down-> device2 : return

'======================================================
newpage
title On premises

cloud cloud {
        cloud AWS
        cloud Azure
        cloud GCP
}
cloud edge
rectangle on_prem {
	node device1
	node device2
}

AWS <-down- edge : request
AWS -down-> edge : return

edge <- device1 : request
edge -down-> device1 : return
edge <- device2 : request
edge -down-> device2 : return

'======================================================
newpage
title Data
cloud cloud {
        cloud AWS
        cloud Azure
        cloud GCP
}
cloud edge

rectangle on_prem {
        collections devices
        file privacy

        devices -> privacy : request
        devices <- privacy : data
}

'note right of devices : Energy

AWS <-down- edge : request
AWS -down-> edge : return

edge <.down. devices : request
edge .down.> devices : return

'======================================================
newpage
title Energy
cloud cloud {
        cloud AWS
        cloud Azure
        cloud GCP
}
cloud edge

rectangle on_prem {
        collections devices
        database battery

        battery .> devices : power
}

'note right of devices : Energy

AWS <-down- edge : request
AWS -down-> edge : return

edge <.down. devices : request
edge .down.> devices : return

'======================================================
newpage
skinparam legendFontSize 18
title Edge computing problems
cloud cloud {
        cloud AWS
        cloud Azure
        cloud GCP
}
cloud edge

rectangle on_prem {
        collections devices
        database battery
        file privacy

        devices -[#blue,bold]> privacy : request
        devices <-[#blue,bold] privacy : data
        battery .[#blue,bold]> devices : power
}

'note right of devices : Energy

AWS <-down- edge : request
AWS -down-> edge : return

edge <.down. devices : request
edge .down.> devices : return

legend
Privacy
Bandwidth
Latency
Reliability
**Energy**
end legend

'======================================================
newpage
title Future

cloud cloud {
        cloud AWS
        cloud Azure
        cloud GCP
}
cloud edge
'note right of edge
'computing expanding
'more downwards
'end note

rectangle on_prem {
        (device1)
        (device2)
        collections devices
        database battery
	battery -> devices
        file privacy
	devices	<-> privacy
}



'note right of on_prem
'        more in-place execution
'        collaborate if not in-place
'        more on-demand
'end note

AWS <-down- edge : request
AWS -down-> edge : return

edge <.down.> device1
edge <.down.> device2

device1 <-[#blue,bold]> device2
device1 <-[#blue,bold]down- devices : offloading
device2 <-[#blue,bold] devices : offloading
device2 <-[#blue,bold]> device2 : in place


'======================================================
newpage
title Web experience

cloud "Web/linux\n" #eeeeee {
        cloud cloud {
                cloud AWS
                cloud Azure
                cloud GCP
        }
        cloud edge
}

'note right of cloud
'Linux based
'Container based microservices
'on-demand service orchestration
'end note

rectangle on-premises {
        (device1)
        (device2)
        collections devices
        database battery
	battery -> devices
        file privacy
	devices	<-> privacy
}

AWS <-down- edge : request
AWS -> edge : return

edge <.down.> device1
edge <.down.> device2

device1 <-> device2
device1 <-down- devices : offloading
device2 <- devices : offloading
device2 <-> device2 : in place

'======================================================
newpage
title Embedded experience

cloud "Web/linux\n" {
        cloud cloud {
                cloud AWS
                cloud Azure
                cloud GCP
        }
        cloud edge
}

AWS <-down- edge : request
AWS -> edge : return

rectangle "on_prem/\nEmbedded" #99f1ff {
        (device1)
        (device2)
        collections devices
        database battery
	battery -> devices
        file privacy
	devices	<-> privacy
}


edge <.down.> device1
edge <.down.> device2
device1 <-> device2
device1 <-down- devices : offloading
device2 <- devices : offloading
device2 <-> device2 : in place

'note right of device2
'Linux may not be too big?
'variety of RTOSes
'Fixed services
'no orchestration
'end note

'======================================================
newpage
skinparam noteFontSize 18
title Gap between Web and Embedded
cloud Web #eeeeee {
        cloud cloud {
                cloud AWS
                cloud Azure
                cloud GCP
        }
        cloud edge
	AWS <-down- edge
	AWS -> edge
}
note right of cloud
Linux
Container
microservices
Orchestration
x86/ARM
end note

rectangle Embedded #99f1ff {
        (device1)
        (device2)
        collections devices
        database battery
	battery -> devices
        file privacy
	devices	<-> privacy
}
note right of Embedded
RTOSes
Firmware
MCUs
SRAM
FLASH
end note

edge <.down.> device1
edge <.down.> device2
device1 <-right-> device2
device1 <-down- devices : offloading
device2 <- devices : offloading
device2 <-> device2 : in place

'======================================================
newpage
skinparam noteFontSize 18
title ML environment

cloud "Web/linux\n" #eeeeee {
        cloud cloud {
                cloud AWS
                cloud Azure
                cloud GCP
        }
        cloud edge
}

note right of cloud
python
heavy training
GPUs
end note

'note right of edge
'Infrence is OK,
'but training?
'end note

rectangle Embedded #99f1ff {
        (device1)
        (device2)
        collections devices
        database battery
	battery -> devices
        file privacy
	devices	<-> privacy
}

note right of Embedded
<s>python ML runtime</s>
<s>training</s>
Any inference in place?
end note

AWS <-down- edge
AWS -> edge

edge <.down.> device1
edge <.down.> device2
device1 <-right-> device2
device1 <-down- devices : offloading
device2 <- devices : offloading
device2 <-> device2 : in place

'======================================================
newpage
skinparam noteFontSize 18
title ML Problem

cloud Web #eeeeee {
        cloud cloud {
                cloud AWS
                cloud Azure
                cloud GCP
        }
        cloud edge
	database Zoo {
	        collections "model"
		AWS -> model
	}
}
note right of Web
python
heavy training
GPUs
end note

rectangle Embedded #99f1ff {
        (device1)
        (device2)
        collections devices
        database battery
	battery -> devices
        file privacy
	devices	<-> privacy
}
note right of Embedded
No Linux
No ML
end note

'note left of Embedded
'<s>python ML runtime</s>
'<s>training</s>
'Any inference in place?
'end note

model -[#blue,bold]> device2 : **NOK**

AWS <-down- edge
AWS -> edge

edge <.down.> device1
edge <.down.> device2
device1 <-right-> device2
device1 <-down- devices : offloading
device2 <- devices : offloading
device2 <-> device2 : in place

'======================================================
newpage
skinparam noteFontSize 18
title Problem

cloud Web #eeeeee {
        cloud cloud {
                cloud AWS
                cloud Azure
                cloud GCP
        }
        cloud edge
	database Zoo {
	        collections "model"
		AWS -> model
	}
}


rectangle Embedded #99f1ff {
        (device1)
        (device2)
        collections devices
        database battery
	battery -> devices
        file privacy
	devices	<-> privacy
}

model .[#blue,bold]> device2 : **NOK**

AWS <-down- edge
AWS -> edge

edge <.down.> device1
edge <.down.> device2
device1 <-right-> device2
device1 <-down- devices : offloading
device2 <- devices : offloading
device2 <-> device2 : in place

'======================================================
newpage
skinparam titleFontSize 24
title \nProposal: TinyML as-a-Service\n

cloud "Web/linux\n" #eeeeee {
        cloud cloud {
                cloud AWS
                cloud Azure
                cloud GCP
        }
        cloud edge
	database Zoo {
	        collections "model"
		AWS -> model
	}
}


cloud "\nTinyMLaaS\n" #FFF44F {
        folder SaaS {
                (Build\nService) as TBS
        	file "OS image" as osimage
		osimage <-TBS
        }
}

TBS <-[#blue,bold]up- model : downloading
rectangle Embedded #99f1ff {
        (device1)
        (device2)
        collections devices
        database battery
	battery -> devices
        file privacy
	devices	<-> privacy
}

file OS_image #FFF44F {
        file "custom\nmodel" as cmodel
        file "custom\nruntime" as cruntime
}

cmodel <.> cruntime
osimage -[#blue,bold]down- OS_image : downloading
device2 .[#blue,bold,dashed]up.> SaaS : info
device2 <-[#blue,bold]up- OS_image : installing

AWS <-down- edge
AWS -> edge

edge <.down.> device1
edge <.down.> device2
device1 <-right-> device2
device1 <-down- devices : offloading
device2 <- devices : offloading
device2 <-> device2 : ML in place

@enduml
